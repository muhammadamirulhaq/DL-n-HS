kernel = [
  [1/9, 1/9, 1/9],
  [1/9, 1/9, 1/9],
  [1/9, 1/9, 1/9]]
  
img = [
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,200,200,200,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,200,0,0,0,0,225,200,0,0,0,0,0,0],
    [0,0,0,0,0,200,0,0,0,0,0,225,200,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,225,200,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,225,200,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,225,200,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,225,200,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,225,200,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,225,200,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,225,200,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,225,200,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,225,200,200,200,200,200,0,0,0,0,0,0,0],
    [0,0,0,0,225,200,200,200,200,200,0,0,0,0,0,0,0],
    [0,0,0,0,225,225,225,150,150,150,150,150,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]

get n img (x,y) = [drop x (take (n+x) row) | row <- drop y (take (n+y) img)]
convolve kernel matrix = sum [sum [a*b | (a,b) <- zip x y] | (x,y) <- zip kernel matrix]
finalConv kernel img = [[convolve kernel (get 3 img (j,i)) | j <- [0..(length img-length kernel)]] | i <- [0..(length img-length kernel)]]

imgRGB = [
 [[0,2,3],[3,0,2],[2,3,4],[3,0,2]],
 [[2,3,4],[2,3,4],[2,3,4],[3,0,2]],
 [[2,3,4],[2,3,4],[1,9,8],[3,0,2]],
 [[2,3,4],[2,3,4],[5,1,4],[3,3,3]]]

tensor = [[[e!!i|e <- x] |x <- imgRGB] |i <- [0..2]]
convolutedRGB = [finalConv kernel t | t <- tensor]
tensorBack = [[[(x!!j)!!i |x <- convolutedRGB] |i <- [0..1]]| j <- [0..1]]
flatten tensor = concat [concat t | t <- tensor]

main :: IO ()
main = do
	-- print $ finalConv kernel img
	print $ flatten tensorBack
